const http = require('https');

/// If you use an API like the google maps, you will just get JSON data





    function getCoordinates(street, city, country) {

        let returnObj = {};


        function formatStrings(str) {

            str = str.split('');

            for (let i = 0; i < str.length; i++) {

                if (str[i] === ' ') {

                    str[i] = '+';

                }
            }

            return str.join('');
        }

        street = formatStrings(street);

        city = formatStrings(city);


        /// Convert street such as Rollcourt Dr. to 'Rollscourt+Dr."

        // The Below link gave you correct results

        /// https://maps.googleapis.com/maps/api/geocode/json?address=61+Rollscourt+Dr.,+Toronto,+ON&key=AIzaSyCZGDHMtmb2WAoZG1VukVSumsjz9kNGJOw

        // The url is not the problem

        const address = `https://maps.googleapis.com/maps/api/geocode/json?address=${street}, +${city}, +${country}&key=AIzaSyCZGDHMtmb2WAoZG1VukVSumsjz9kNGJOw`;

        http.get(address, function (response) {

            let body = '';

            // specify how we handle a data event
            response.on('data', function (chunk) {

                // handle data event

                body += chunk;


            });

            // specify how we handle an 'end' event

            response.on('end', function () {

                // let returnThis = JSON.parse(body[result][2]);

                let local = JSON.parse(body);

                // console.log(returnThis)

                ///  return returnThis

                //   console.log(local['results'][0]['geometry'].location);

                returnObj.latitude = local['results'][0]['geometry'].location.lat;

                returnObj.longitude = local['results'][0]['geometry'].location.lng;


                // console.log(returnObj);

                return new Promise((resolve, reject) => {

                    if (returnObj.latitude !== undefined && returnObj.longitude !== undefined) {

                        console.log('resolve ran!');
                        resolve(returnObj)

                    }
                    else {

                        reject('   ')
                    }


                });


            });

        });

    }










console.log(getCoordinates('460 King St W','Toronto', 'CA'));



//////////////////////////////////



const http = require('https');

/// If you use an API like the google maps, you will just get JSON data


function getCoordinates(street, city, country) {


    let returnObj;

    let isFinished = false;


    function getCoordinates2(street, city, country) {


        function formatStrings(str) {

            str = str.split('');

            for (let i = 0; i < str.length; i++) {

                if (str[i] === ' ') {

                    str[i] = '+';

                }
            }

            return str.join('');
        }

        street = formatStrings(street);

        city = formatStrings(city);


        /// Convert street such as Rollcourt Dr. to 'Rollscourt+Dr."

        // The Below link gave you correct results

        /// https://maps.googleapis.com/maps/api/geocode/json?address=61+Rollscourt+Dr.,+Toronto,+ON&key=AIzaSyCZGDHMtmb2WAoZG1VukVSumsjz9kNGJOw

        // The url is not the problem

        const address = `https://maps.googleapis.com/maps/api/geocode/json?address=${street}, +${city}, +${country}&key=AIzaSyCZGDHMtmb2WAoZG1VukVSumsjz9kNGJOw`;

        http.get(address, function (response) {

            let body = '';

            // specify how we handle a data event
            response.on('data', function (chunk) {

                // handle data event

                body += chunk;


            });

            // specify how we handle an 'end' event

            response.on('end', function () {

                // let returnThis = JSON.parse(body[result][2]);

                let local = JSON.parse(body);

                // console.log(returnThis)

                ///  return returnThis

                //   console.log(local['results'][0]['geometry'].location);

                returnObj = local['results'][0]['geometry'].location;

             ///   returnObj.longitude = local['results'][0]['geometry'].location.lng;


                // console.log(returnObj);


            });

        });

    }

    let gotPromise = () => {


        return new Promise((resolve, reject) => {

            if (returnObj !== undefined) {

                console.log('resolve ran!');
                resolve(returnObj);

            }
            else {

                reject('   ')
            }


        });


    };

    getCoordinates2(street, city, country);

    console.log(returnObj);

    gotPromise().then((obj) => {

        if (obj !== undefined) {

            isFinished = true;
        }
    });


    if (isFinished){


        return returnObj;

    }






}

///console.log(returnObj);


let results = getCoordinates('460 King St. W', 'Toronto', 'CA');

console.log('result is.. ' + results);

/// console.log(gotLocal);


///// Fuck request, using axios after thois attempt


const request = require('request');
const https = require('https');


function getCoordinates(street, city, country){

    let result;



    function formatStrings(str) {

        str = str.split('');

        for (let i = 0; i < str.length; i++) {

            if (str[i] === ' ') {

                str[i] = '+';

            }
        }

        return str.join('');
    }


    street = formatStrings(street);

    city = formatStrings(city);

    const address = `https://maps.googleapis.com/maps/api/geocode/json?address=${street}, +${city}, +${country}&key=AIzaSyCZGDHMtmb2WAoZG1VukVSumsjz9kNGJOw`;


    https.get(address, function (response) {

        let body = '';

        // specify how we handle a data event
        response.on('data', function (chunk) {

            // handle data event

            body += chunk;


        });

        response.on('end',  function(){

            let local = JSON.parse(body);

            result = local['results'][0]['geometry'].location

            return result


        })

    })



    // request.get(address)
    //     .on('response', function (response) {
    //
    //
    //
    //
    //     })


    // request(address, (error, response, body) => {
    //
    //     console.log('error:', error); // Print the error if one occurred
    //     console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received
    //     console.log('body:', body); // Print the HTML for the Google homepage.
    //
    //
    //     let local = JSON.parse(body);
    //
    //     console.log('the decoded data is: ' + local);
    //
    //     return local['results'][0]['geometry'];

      ////  console.log(returnObj);
    //
    // });











}

getCoordinates('460 King St. W', 'Toronto', 'CA');

///console.log('result is.. ' + results);


/////////////// IMPROVEMENT



const axios = require('axios');


function getCoordinates(street, city, country){

    let data;

    function formatStrings(str) {

        str = str.split('');

        for (let i = 0; i < str.length; i++) {

            if (str[i] === ' ') {

                str[i] = '+';

            }
        }

        return str.join('');
    }

    street = formatStrings(street);

    city = formatStrings(city);


    const address = `https://maps.googleapis.com/maps/api/geocode/json?address=${street}, +${city}, +${country}&key=AIzaSyCZGDHMtmb2WAoZG1VukVSumsjz9kNGJOw`;


    let getSrc = () => {





            return axios.get(address)
                .then( (response) => {
                    return response.data.results[0].geometry;




                })
                .catch(function (error) {
                    console.log(error);
                });


    };

   return getSrc().then((res)=>{
       console.log('lat lat lat: ', res.location);

       return res.location
    });








}


let result = getCoordinates('460 King St. W', 'Toronto', 'CA');
console.log('result is...' + result);


//////// I edit it a bit

const axios = require('axios');


function getCoordinates(street, city, country){

    let data;

    let isFinished = false;

    function formatStrings(str) {

        str = str.split('');

        for (let i = 0; i < str.length; i++) {

            if (str[i] === ' ') {

                str[i] = '+';

            }
        }

        return str.join('');
    }

    street = formatStrings(street);

    city = formatStrings(city);


    const address = `https://maps.googleapis.com/maps/api/geocode/json?address=${street}, +${city}, +${country}&key=AIzaSyCZGDHMtmb2WAoZG1VukVSumsjz9kNGJOw`;


    let getSrc = () => {


        // return new Promise((resolve, reject) => {


            return axios.get(address)
                .then( (response) => {

                    /// return  assignResult(response.data.results[0].geometry.location)
                    return response.data.results[0].geometry;
                    // resolve(response.data.results[0].geometry);



                })
                .catch(function (error) {
                    console.log(error);
                });




        // });






       //  return result




    };

   return getSrc().then((res)=>{
       console.log('lat lat lat: ', res.location);

       data = res.location;
       isFinished = true;
    });


    // return gotIt.location

    if (isFinished && data !== undefined){

        return data;
    }




}


let result = getCoordinates('460 King St. W', 'Toronto', 'CA');
console.log('result is...' + result);



////////// A WORK IN PROGRESS

